/**
 * Mixins
 * ======================================================================== */

/**
 * Grid border ofsset.
 *
 * Vertically inlining the block with other content by removing border width.
 *
 * @param {unit}    [width] - Border width.
 * @param {boolean} [dir]   - Border vertical position: 1 - top, 2 - bottom,
 *                             3 - both
 */
g-border(width, dir=null)
    width = to-px(width)
    mt = prop-partial('margin-top')
    mb = prop-partial('margin-bottom')

    if byte-and(dir, 1) // top
        margin-top to-unit(to-px(mt) - width, unit(mt))
    if byte-and(dir, 2) // bottom
        margin-bottom to-unit(to-px(mb) - width, unit(mb))

    // $pt = prop-partial('padding-top') unless mt
    // $pb = prop-partial('padding-bottom') unless mb

    // if dir & 1 // top
    //     {mt ? 'margin' : 'padding'}-top (mt ? mt : $pt) - width
    // if dir & 2 // bottom
    //     {mb ? 'margin' : 'padding'}-bottom (mb ? mb : $pb) - width


g-border-v(width, style, color)
    g-border(width, 3)

    border-top width style color
    border-bottom width style color


g-border-v-width(width)
    g-border(width, 3)

    border-top-width width
    border-bottom-width width


g-border-top(width, style, color)
    g-border(width, 1)

    border-top width style color


g-border-top-width(width, style, color)
    g-border(width, 1)

    border-top-width width


g-border-bottom(width, style, color)
    g-border(width, 2)

    border-bottom width style color

// Alias for: g-border-bottom
g-border-bot = g-border-bottom


g-border-bottom-width(width)
    g-border(width, 2)

    border-bottom-width width

// Alias for: g-border-bottom-width
g-border-bot-width = g-border-bottom-width